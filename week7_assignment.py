# -*- coding: utf-8 -*-
"""week7_assignment.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/18TzVysKw7-cc6JgWFg9opD0OlKCo_gsS

# Access the file from Google Colab through the link bellow
https://colab.research.google.com/drive/18TzVysKw7-cc6JgWFg9opD0OlKCo_gsS?usp=sharing

# Mounting the Google Drive
"""

from google.colab import drive
drive.mount('/content/drive')

"""# Listing files in the target directory to confirm the location of the dataset

"""

!ls /content/drive/MyDrive/'Colab Notebooks'

"""# Loading and Exploring the Dataset"""

import pandas as pd

# Load the dataset from Google Drive
file_path = '/content/drive/MyDrive/Colab Notebooks/iris.csv' # Adjust according to your dataset location

try:
    iris = pd.read_csv(file_path)  # Load the dataset
    print("Dataset loaded successfully!")
except FileNotFoundError:
    print("File not found. Please check the file path.")

# Display the first few rows
print("\nFirst 5 rows of the dataset:")
print(iris.head())

# Check the structure of the dataset
print("\nDataset info:")
print(iris.info())

# Check for missing values
print("\nMissing values in the dataset:")
print(iris.isnull().sum())

# Clean the dataset by dropping missing values (if any)
iris_cleaned = iris.dropna()
print("\nDataset after dropping missing values:")
print(iris_cleaned.info())

"""# Basic Data Analysis"""

# Compute basic statistics of numerical columns
print("\nBasic statistics of the dataset:")
print(iris_cleaned.describe())

# Perform groupings on the variety column and compute the mean of numerical columns
print("\nMean of numerical columns grouped by variety:")
grouped_means = iris_cleaned.groupby('variety').mean()
print(grouped_means)

# Identify any patterns or findings
print("\n Findings:")
print("Petal length and petal width vary significantly across different varieties.")

"""# Importing Visualization Libraries"""

import matplotlib.pyplot as plt
import seaborn as sns

# Set the style for seaborn
sns.set(style="whitegrid")

"""## Line Chart"""

# Create a cumulative sum of petal lengths for each variety
iris_cleaned['cumulative_petal_length'] = iris_cleaned.groupby('variety')['petal.length'].cumsum()

# Line chart showing the cumulative petal length for each variety
plt.figure(figsize=(10, 6))
for variety, group_data in iris_cleaned.groupby('variety'):
    plt.plot(group_data.index, group_data['cumulative_petal_length'], label=variety)

plt.title('Cumulative Petal Length by Variety', fontsize=14)
plt.xlabel('Index', fontsize=12)
plt.ylabel('Cumulative Petal Length', fontsize=12)
plt.legend(title='Variety')
plt.show()

"""## Bar Chart"""

# Bar chart comparing average petal length across varieties
plt.figure(figsize=(8, 6))

# Explicitly assign `hue` to `x` and disable the legend
sns.barplot(
    x='variety', y='petal.length',
    data=iris_cleaned,
    errorbar=None,
    palette='viridis',
    hue='variety',
    dodge=False,
    legend=False
)

plt.title('Average Petal Length by Variety', fontsize=14)
plt.xlabel('Variety', fontsize=12)
plt.ylabel('Average Petal Length', fontsize=12)
plt.show()

"""## Histogram"""

# Histogram of sepal length to understand its distribution
plt.figure(figsize=(8, 6))
sns.histplot(iris_cleaned['sepal.length'], kde=True, bins=20, color='blue')

plt.title('Distribution of Sepal Length', fontsize=14)
plt.xlabel('Sepal Length', fontsize=12)
plt.ylabel('Frequency', fontsize=12)
plt.show()

"""## Scatter Plot"""

# Scatter plot of sepal length vs. petal length
plt.figure(figsize=(10, 6))
sns.scatterplot(x='sepal.length', y='petal.length', hue='variety', data=iris_cleaned, palette='Set2')

plt.title('Sepal Length vs. Petal Length', fontsize=14)
plt.xlabel('Sepal Length', fontsize=12)
plt.ylabel('Petal Length', fontsize=12)
plt.legend(title='Variety')
plt.show()